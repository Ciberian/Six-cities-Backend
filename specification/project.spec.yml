openapi: 3.0.2
info:
  title: API сервер для проекта «6 городов».
  description: |-
    * Список ресурсов и маршрутов сервера «6 городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.1
tags:
  - name: users
    description: Действия с пользователеми.
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.
      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя.
      description: Авторизует пользователя на основе логина и пароля.
      requestBody:
        description: Информация для авторизации.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'

        "401":
          description: Ошибка авторизации, проверьте введённые данные.

    get:
      tags:
        - users
      summary: Проверить статус авторизации пользователя.
      description: Возвращает информацию о статусе авторизации пользователя.

      parameters:
        - in: header
          name: Autorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjU1MDMwZml2ZUBtYWlsLmNvbSIsImlkIjoiNjM2MDI2M2M1OWEzNjgxNDk3MzEyOTAwIiwiaWF0IjoxNjY3Mjk2NDI1LCJleHAiOjE2Njc0NjkyMjV9.E6r-n2O-YC88cb2klVQYqTuBI3znnmKCL5JdY_Wpt74

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Ошибка авторизации, проверьте введённые данные.

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение аватара должно быть в формате `png` или `jpg`.
      parameters:
        - in: header
          name: Content-Type
          schema:
            type: string
            example: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

        - in: header
          name: Content-Type
          schema:
            type: string
            example: image/png

        - in: header
          name: Content-Disposition
          schema:
            type: string
            example: form-data; name="avatar"; filename="Ava.png"

      responses:
        "201":
          description: Аватарка загружена.
          content:
            application/json:
              schema:
                type: object
                properties:
                  filepath:
                    type: string
                    example: "upload\\LFNDd61tFJwmDqtAZFkko.png"

  /offers/create:
    post:
      tags:
        - offers
      summary: Создание оффера
      description: Создаёт новый оффер.
      requestBody:
        description: Информация для создания нового оффера.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true

      responses:
        "201":
          description: Оффер успешно создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Не удаётся создать оффер, проверьте правильность введённых данных.

        "401":
          description: Пользователь не авторизован.

      parameters:
      - in: header
        name: Accept
        schema:
          type: string
          example: application/json
      - in: header
        name: Content-Type
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: true

  /offers/update:
    post:
      tags:
        - offers
      summary: Редактирование оффера
      description: Обновляет оффер.
      requestBody:
        description: Информация для обновления оффера.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOffer'
        required: true

      responses:
        "200":
          description: Оффер успешно обновлён.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Не удаётся обновить оффер, проверьте правильность введённых данных.

        "401":
          description: Пользователь не авторизован.

      parameters:
      - in: header
        name: Accept
        schema:
          type: string
          example: application/json
      - in: header
        name: Content-Type
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: true

  /offers/{offerId}/delete:
    delete:
      tags:
        - offers
      summary: Удалить оффер
      description: Удаляет оффер с указанным id.

      parameters:
        - in: header
          name: Autorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
          required: true

      responses:
        "200":
          description: Оффер был успешно удалён.

        "406":
          description: Пользователь может удалять только свои офферы.

        "401":
          description: Пользователь не авторизован.

  /offers/{offersCount}:
    get:
      tags:
        - offers
      summary: Получение списка офферов
      description: Возвращает массив офферов. Каждый оффер описан в виде объекта.

      responses:
        "200":
          description: Офферы успешно получены.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerItem'

        "408":
          description: Не удаётся получить офферы, повторите попытку позже.

      parameters:
        - in: query
          name: offersCount
          schema:
            type: integer
            minimum: 60
          description: Не обязательный параметр, указывающий на количество получаемых офферов.
          required: false
        - in: header
          name: Accept
          schema:
            type: string
            example: application/json
        - in: header
          name: Autorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
          required: false

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получить оффер
      description: Возвращает оффер с идентификатором offerId.

      responses:
        "200":
          description: Оффер успешно получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "404":
          description: Не удаётся получить оффер, возможно оффер с указанным id отсутствует.

      parameters:
      - in: header
        name: Accept
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: false

  /offers/bundles/premiums:
    get:
      tags:
        - offers
      summary: Получение списка премиальных офферов (не более 3 офферов)
      description: Возвращает массив премиальных офферов. Каждый оффер описан в виде объекта.

      responses:
        "200":
          description: Офферы успешно получены.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerItem'

        "408":
          description: Не удаётся получить офферы, повторите попытку позже.

      parameters:
      - in: header
        name: Accept
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: false

  /offers/bundles/favorites:
    get:
      tags:
        - offers
      summary: Получение списка избранных офферов
      description: Возвращает массив избранных офферов. Каждый оффер описан в виде объекта.

      responses:
        "200":
          description: Офферы успешно получены.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/offerItem'

        "408":
          description: Не удаётся получить офферы, повторите попытку позже.

        "401":
          description: Пользователь не авторизован.

      parameters:
      - in: header
        name: Accept
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: true

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Получение списка комментариев
      description: Возвращает массив комментариев для оффера с идентификатором offerId. Каждый комментарий описан в виде объекта.

      responses:
        "200":
          description: Комментарии успешно получены.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/сomment'

        "408":
          description: Не удаётся получить комментарии, повторите попытку позже.

        "404":
          description: Оффер с указанным идентификатором не найден.

    post:
      tags:
        - comments
      summary: Добавление нового комментария
      description: Добавляет новый комментарий для с идентификатором hotelId. Возвращает объект созданного комментария.
      requestBody:
        description: Информация для добавления комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/сreateComment'
        required: true

      responses:
        "201":
          description: Комментарий успешно создан.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/сomment'

        "400":
          description: Ошибка запроса.

        "401":
          description: Комментарий могут оставлять только авторизованные пользователи.

      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          example: application/json
      - in: header
        name: Autorization
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
        required: true

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: keks@htmlacademy.ru
        password:
          type: string
          example: 123456
        name:
          type: string
          example: John Doe
        isPro:
          type: boolean
          example: false
        favorites:
          type: array
          example: []
    loginUser:
      type: object
      properties:
        email:
          type: string
          example: keks@htmlacademy.ru
        password:
          type: string
          example: 123456
    loginResponse:
      type: object
      properties:
        email:
          type: string
          example: keks@htmlacademy.ru
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6IjEyM2FzZGZhQGdtYWlsLmNvbSIsImlkIjoiNjM2MjQwM2Q4MzkyMWQ1ZTVmZGI3YWI1IiwiaWF0IjoxNjY3Mzg0MDU2LCJleHAiOjE2Njc1NTY4NTZ9.z9fAP9Ury1a1Z4v-khpPSju5hx9HNZpGfhJw6A5pRA8
    user:
      type: object
      properties:
        email:
          type: string
          example: Oliver.conner@gmail.com
        isPro:
          type: boolean
          example: false
        name:
          type: string
          example: Oliver.conner
        favorites:
          type: array
          example: []

    offer:
      type: object
      properties:
        bedrooms:
          type: number
          example: 3
        city:
          type: object
          properties:
            location:
              type: object
              properties:
                latitude:
                  type: number
                  example: 52.370216
                longitude:
                  type: number
                  example: 4.895168
                zoom:
                  type: number
                  example: 10
            name:
              type: string
              example: Amsterdam
        description:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        goods:
          type: array
          example: [Washer, Breakfast, Air conditioning]
        host:
          type: object
          properties:
            email:
              type: string
              example: Oliver.conner@gmail.com
            password:
              type: string
              example: 608290aa9b06e414c2d3533f32566789ecd7cc8d5c11c7c7babd60cb3a63f53e
            isPro:
              type: boolean
              example: false
            name:
              type: string
              example: Oliver.conner
        id:
          type: number
          example: 1
        images:
          type: array
          example: [img/1.png, img/2.png, img/3.png]
        isFavorite:
          type: boolean
          example: true
        isPremium:
          type: boolean
          example: false
        location:
          type: object
          properties:
            latitude:
              type: number
              example: 52.35514938496378
            longitude:
              type: number
              example: 4.673877537499948
            zoom:
              type: number
              example: 8
        maxAdults:
          type: number
          example: 5
        previewImage:
          type: string
          example: img/1.png
        price:
          type: number
          example: 120
        rating:
          type: number
          example: 4.8
        title:
          type: string
          example: Beautiful & luxurious studio at great location
        type:
          type: string
          example: apartment
        commentsCount:
          type: number
          example: 0
    createOffer:
      type: object
      properties:
        bedrooms:
          type: number
          example: 3
        city:
          type: object
          properties:
            location:
              type: object
              properties:
                latitude:
                  type: number
                  example: 52.370216
                longitude:
                  type: number
                  example: 4.895168
                zoom:
                  type: number
                  example: 10
            name:
              type: string
              example: Amsterdam
        description:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        goods:
          type: array
          example: [Washer, Breakfast, Air conditioning]
        hostId:
          type: string
          example: 635910512572ced352c15664
        id:
          type: string
          example: 635910512572ced352c15664
        images:
          type: array
          example: [img/1.png, img/2.png, img/3.png]
        isFavorite:
          type: boolean
          example: true
        isPremium:
          type: boolean
          example: false
        location:
          type: object
          properties:
            latitude:
              type: number
              example: 52.35514938496378
            longitude:
              type: number
              example: 4.673877537499948
            zoom:
              type: number
              example: 8
        maxAdults:
          type: number
          example: 5
        previewImage:
          type: string
          example: img/1.png
        price:
          type: number
          example: 120
        rating:
          type: number
          example: 4.8
        title:
          type: string
          example: Beautiful & luxurious studio at great location
        type:
          type: string
          example: apartment
    updateOffer:
      type: object
      properties:
        bedrooms:
          type: number
          example: 7
        description:
          type: string
          example: Some short description string for example.
        isFavorite:
          type: boolean
          example: false
    offerItem:
      type: object
      properties:
        bedrooms:
          type: number
          example: 3
        city:
          type: object
          properties:
            location:
              type: object
              properties:
                latitude:
                  type: number
                  example: 52.370216
                longitude:
                  type: number
                  example: 4.895168
                zoom:
                  type: number
                  example: 10
            name:
              type: string
              example: Amsterdam
        description:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        goods:
          type: array
          example: [Washer, Breakfast, Air conditioning]
        hostId:
          type: string
          example: 635910512572ced352c15664
        id:
          type: string
          example: 635910512572ced352c15664
        images:
          type: array
          example: [img/1.png, img/2.png, img/3.png]
        isFavorite:
          type: boolean
          example: true
        isPremium:
          type: boolean
          example: false
        location:
          type: object
          properties:
            latitude:
              type: number
              example: 52.35514938496378
            longitude:
              type: number
              example: 4.673877537499948
            zoom:
              type: number
              example: 8
        maxAdults:
          type: number
          example: 5
        previewImage:
          type: string
          example: img/1.png
        price:
          type: number
          example: 120
        rating:
          type: number
          example: 4.8
        title:
          type: string
          example: Beautiful & luxurious studio at great location
        type:
          type: string
          example: apartment
        commentsCount:
          type: number
          example: 0

    сomment:
      type: object
      properties:
        text:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        postDate:
          type: string
          example: 2022-10-31T19:47:35.115Z
        rank:
          type: number
          example: 4.8
        user:
          type: object
          properties:
            email:
              type: string
              example: Oliver.conner@gmail.com
            isPro:
              type: boolean
              example: false
            name:
              type: string
              example: Oliver.conner
            favorites:
              type: array
              example: ["636026416bdbf41ee967585e"]
    сreateComment:
      type: object
      properties:
        text:
          type: string
          example: A quiet cozy and picturesque that hides behind a a river by the unique lightness of Amsterdam.
        rating:
          type: number
          example: 4.8

